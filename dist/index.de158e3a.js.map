{"mappings":"AAAA,IAAI,QAAQ;IACV;QAAE,IAAI;QAAG,OAAO;QAA0B,aAAa;IAAiE;IACxH;QAAE,IAAI;QAAG,OAAO;QAAqB,aAAa;IAA2D;IAC7G;QAAE,IAAI;QAAG,OAAO;QAAoB,aAAa;IAAsC;CACxF;AAED,OAAO,MAAM,GAAG,WAAY;IAC1B,aAAa,kBAAkB;AACjC;AAEA,+FAA+F;AAC/F,MAAM,aAAa,CAAC,OAAO,cAAgB;IACzC,MAAM,cAAc;IACpB,OAAO;QACL,IAAI,KAAK,GAAG;QACZ,OAAO;QACP,aAAa;QACb,YAAY,KAAK;IACnB;AACF;AAEA,MAAM,oBAAoB,CAAC,QAAU;IACnC,MAAM,gBAAgB,MAAM,GAAG,CAAC,CAAA,OAAQ;QACtC,IAAI,CAAC,KAAK,UAAU,EAAE;YACpB,MAAM,cAAc;gBAAC,GAAG,IAAI;gBAAE,YAAY,KAAK;YAAA;YAC/C,OAAO;QACT,CAAC;IACH;IACA,QAAQ;IACR,OAAO;AACT;AAGA,MAAM,UAAU,CAAC,MAAM,WAAa;IAClC,MAAM,WAAW;WAAK;QAAU;KAAM;IACtC,QAAQ;IACR,OAAO;AACT;AAGA,MAAM,kBAAkB,CAAC,SAAU;IACjC,MAAM,gBAAgB,SAAS,OAAM,MAAM,CAAC,OAAO,CAAC,WAAW,EAAE;IACjE,MAAM,QAAQ,MAAM,SAAS,CAAC,CAAA,UAAW,QAAQ,EAAE,KAAK;IACxD,MAAM,WAAW,MAAM,KAAK,CAAC,OAAO,QAAQ,EAAE,CAAC,EAAE;IACjD,MAAM,aAAa,MAAM,KAAK,CAAC,GAAG;IAClC,MAAM,WAAW,MAAM,KAAK,CAAC,QAAQ;IAErC,IAAI,OAAM,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,oBAAqB;QACvD,qBAAqB,UAAU,YAAY;QAC3C,aAAa;IACf,OACK,IAAI,OAAM,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,aAAa;QACpD,WAAW,YAAY;QACvB,aAAa;IACf,CAAC;AAEH;AAGA,MAAM,aAAa,CAAC,YAAY,WAAa;IAC3C,QAAQ;WAAI;WAAe;KAAS;IACpC,OAAO;AACT;AAEA,MAAM,uBAAuB,CAAC,UAAU,YAAY,WAAa;IAC/D,SAAS,UAAU,GAAG,CAAC,SAAS,UAAU;IAC1C,QAAQ;WAAI;QAAY;WAAa;KAAS;IAC9C,OAAO;AACT;AAGA,2DAA2D;AAC3D,MAAM,iBAAiB,SAAS,aAAa,CAAC;AAC9C,MAAM,mBAAmB,SAAS,aAAa,CAAC;AAChD,MAAM,iBAAiB,SAAS,aAAa,CAAC;AAC9C,MAAM,uBAAuB,SAAS,aAAa,CAAC;AAGpD,iBAAiB,gBAAgB,CAAC,SAAS,SAAU,MAAK,EAAE;IAC1D,aACE,QACE,WAAW,eAAe,KAAK,EAAE,qBAAqB,KAAK,GAAI;AAErE;AAEA,eAAe,gBAAgB,CAAC,SAAS,SAAS,MAAK,EAAC;IACtD,QAAQ,GAAG,CAAC;IACZ,gBAAgB;AAChB,6BAA6B;AAC/B;AAGA,MAAM,eAAe,CAAC,QAAU;IAC9B,eAAe,SAAS,GAAG;IAC3B,MAAM,OAAO,CAAC,CAAA,OAAQ;QACpB,MAAM,eAAe,KAAK,UAAU,GAAG,OAAO,EAAE;QAChD,MAAM,gBAAgB,KAAK,UAAU,GAAG,0BAA0B,kBAAkB;QACpF,eAAe,SAAS,IAAI,CAAC;qCACI,EAAE,KAAK,EAAE,CAAC;uCACR,EAAE,aAAa;;iCAErB,EAAE,KAAK,KAAK,CAAC;+BACf,EAAE,KAAK,WAAW,CAAC;;wCAEV,EAAE,cAAc;gBACxC,CAAC;IACf;AACF,EAIA,qBAAqB;CACrB,2BAA2B;CAC3B,yCAAyC;CACzC,0BAA0B;CAC1B,oEAAoE;CACpE,2DAA2D;CAG3D,aAAa;CACb,WAAW;CACX,sBAAsB;CACtB,sBAAsB;CACtB,qBAAqB","sources":["src/main.js"],"sourcesContent":["let ideas = [\n  { id: 1, title: 'Bluetooth rotary phone', description: 'Because it\\'s cool as heck and who wants a landline these days' },\n  { id: 2, title: 'Bring back bowing', description: 'No more shaking hands! Let\\'s all bow and curtsy instead' },\n  { id: 3, title: 'Waterproof books', description: 'For reading in a pool/ocean/bathtub' },\n]\n\nwindow.onload = function () {\n  displayIdeas(addFavoriteStatus(ideas));\n}\n\n//should this be deconstructed into individual functions that create each piece of this object?\nconst createIdea = (title, description) => {\n  event.preventDefault() \n  return {\n    id: Date.now(),\n    title: title,\n    description: description,\n    isFavorite: false\n  }\n}\n\nconst addFavoriteStatus = (ideas) => {\n  const favAddedIdeas = ideas.map(idea => {\n    if (!idea.isFavorite) {\n      const updatedIdea = {...idea, isFavorite: false}\n      return updatedIdea\n    }\n  })\n  ideas = favAddedIdeas\n  return ideas\n}\n\n\nconst addIdea = (idea, oldIdeas) => {\n  const newIdeas = [ ...oldIdeas, idea ]\n  ideas = newIdeas\n  return ideas\n}\n\n\nconst handleCardClick = (event) => {\n  const clickedCardId = parseInt(event.target.closest('section').id);\n  const index = ideas.findIndex(element => element.id === clickedCardId)\n  const selected = ideas.slice(index, index + 1)[0]\n  const firstIdeas = ideas.slice(0, index)\n  const endIdeas = ideas.slice(index + 1)\n\n  if (event.target.classList.contains('favorite-button') ) {\n    toggleFavoriteStatus(selected, firstIdeas, endIdeas)\n    displayIdeas(ideas)\n  }\n  else if (event.target.classList.contains('delete-x')) {\n    deleteCard(firstIdeas, endIdeas)\n    displayIdeas(ideas)\n  }\n\n}\n\n\nconst deleteCard = (firstIdeas, endIdeas) => {\n  ideas = [...firstIdeas, ...endIdeas]\n  return ideas\n}\n\nconst toggleFavoriteStatus = (selected, firstIdeas, endIdeas) => {\n  selected.isFavorite = !selected.isFavorite\n  ideas = [...firstIdeas, selected, ...endIdeas]\n  return ideas\n}\n\n\n//DOM UPDATES - need to figure out import syntax for parcel\nconst ideasContainer = document.querySelector('#ideas-container');\nconst submitIdeaButton = document.querySelector(\"#save-button\");\nconst userInputTitle = document.querySelector(\"#title-input\");\nconst userInputDescription = document.querySelector(\"#description-input\");\n\n\nsubmitIdeaButton.addEventListener('click', function (event) {\n  displayIdeas(  \n    addIdea( \n      createIdea(userInputTitle.value, userInputDescription.value ), ideas)\n      )\n})\n\nideasContainer.addEventListener('click', function(event){\n  console.log(event)\n  handleCardClick(event)\n  //function to toggle favorite\n})\n\n\nconst displayIdeas = (ideas) => {\n  ideasContainer.innerHTML = \"\";\n  ideas.forEach(idea => {\n    const favoriteIcon = idea.isFavorite ? \"❤️\" : \"\";\n    const favButtonText = idea.isFavorite ? 'Remove from Favorites' : 'Add to Favorites'\n    ideasContainer.innerHTML += `\n      <section class=\"idea-card\" id=\"${idea.id}\">\n        <div class=\"card-header\"><span>${favoriteIcon}</span><p class=\"delete-x\">X</p></div>\n        <article>\n          <h2 class=\"card-title\">${idea.title}</h2>\n          <p class=\"card-text\">${idea.description}</p>\n        </article>\n        <button class=\"favorite-button\">${favButtonText}</button>\n      </section>`\n  })\n}\n\n\n\n// //FUNCTIONAL NOTES\n// - could i use recursion?\n// - ideas as a global variable is impure\n// - can i fetch from api?\n// - passing functions through to other functions doesn't look clean\n// - which are impure?  do they need to be returning Ideas?\n\n\n// NEXT STEPS\n// - search\n// - pull in from api?\n// filter by favorites\n// no global variable"],"names":[],"version":3,"file":"index.de158e3a.js.map","sourceRoot":"/__parcel_source_root/"}